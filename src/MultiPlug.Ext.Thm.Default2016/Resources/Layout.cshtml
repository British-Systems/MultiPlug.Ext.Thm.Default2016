@model MultiPlug.Base.Http.EdgeApp

@using MultiPlug.Base.Http
@{
    string AppsActive = (Model.Context.Paths.Location == MultiPlug.Base.Http.HttpEndpointType.App) ? "active" : ""; ;
    string ExtensionsActive = (Model.Context.Paths.Location == MultiPlug.Base.Http.HttpEndpointType.Settings) ? "active" : "";
    string SettingsActive = (Model.Context.Paths.Location == MultiPlug.Base.Http.HttpEndpointType.System) ? "active" : "";
    string AnalyticsActive = (Model.Context.Paths.Location == MultiPlug.Base.Http.HttpEndpointType.Analytics) ? "active" : "";

    string Title = string.Empty;



    switch (Model.Context.Paths.Location)
    {
        case HttpEndpointType.App:
            Title = Model.Extension.Name + " - Apps - MultiPlug";
            break;

        case HttpEndpointType.System:
            Title = Model.Extension.Name + " - MultiPlug Settings";
            break;

        case HttpEndpointType.Settings:
            Title = Model.Extension.Name + " - Extension Settings - MultiPlug";
            break;

        case HttpEndpointType.Api:
            Title = Model.Extension.Name + " - API - MultiPlug";
            break;

        case HttpEndpointType.Doc:
            Title = Model.Extension.Name + " - Docs - MultiPlug";
            break;

        default:
            Title = Model.Extension.Name + " - MultiPlug";
            break;
    }
}
@functions {
    static int TabIndex = 1;

    public static string GetTabIndex()
    {
        int index = TabIndex;
        TabIndex++;
        return index.ToString();
    }


}

<!DOCTYPE html>
<!--[if lt IE 7]><html class="no-js lt-ie9 lt-ie8 lt-ie7"><![endif]-->
<!--[if IE 7]><html class="no-js lt-ie9 lt-ie8"><![endif]-->
<!--[if IE 8]><html class="no-js lt-ie9"><![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js full-height">
<!--<![endif]-->
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>@Title</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width">

    <base href="@Model.Context.Paths.Base">

    <link href="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/styles/fonts.css" media="all" rel="stylesheet" type="text/css">
    <link href="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/styles/multiplug.css" media="all" rel="stylesheet" type="text/css">
    <link href="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/styles/bootstrap.min.css" media="all" rel="stylesheet" type="text/css">
    <link href="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/styles/font.awesome.min.css" media="all" rel="stylesheet" type="text/css">
    <link href="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/styles/adminflare.min.1.0.29.css" media="all" rel="stylesheet" type="text/css">

    <style type="text/css">
		/* ======================================================================= */
		/* Server Statistics */
		.well.widget-pie-charts .box {
			margin-bottom: -20px;
		}

		/* ======================================================================= */
		/* Supported Browsers */
		#supported-browsers header { color: #666; display: block; font-size: 14px; }

		#supported-browsers header strong { font-size: 18px; }

		#supported-browsers .span10 { margin-bottom: -15px; text-align: center; }

		#supported-browsers .span10 div {
			margin-bottom: 15px;
			margin-right: 15px;
			display: inline-block;
			width: 120px;
		}

		#supported-browsers .span10 div:last-child { margin-right: 0; }

		#supported-browsers .span10 img { height: 40px; width: 40px; }

		#supported-browsers .span10 span { line-height: 40px; font-size: 14px; font-weight: 600; }

		@@media (max-width: 767px) {
			#supported-browsers header { text-align: center; margin-bottom: 20px; }
		}

		/* ======================================================================= */
		/* Status panel */
		.status-example { line-height: 0; position:relative; top: 22px; }
    </style>

    <link href="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/styles/selectize.default.css" rel="stylesheet" />
	

    <script src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/scripts/modernizr-2.6.2.js" type="text/javascript"></script>
    <script src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.mplib/scripts/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/scripts/selectize.min.js"></script>

    @Raw(Model.Extension.HeadMarkUp)

</head>
<body class="full-height">
    <!-- Main navigation bar
        ================================================== -->
    <header class="navbar navbar-fixed-top" id="main-navbar">
        <div class="navbar-inner">
            <div class="container">
                <a class="logo" href="">@*<span class="mpicon-multiplug-solo"></span>*@</a>
                @*<a class="logo" href=""><img height="30" width="120" alt="MultiPlug Home" src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/images/MultiPlug.png"></a>*@
                <a class="btn nav-button collapsed" data-toggle="collapse" data-target=".nav-collapse">
                    <span class="icon-reorder"></span>
                </a>
                <div class="nav-collapse collapse">
                    <ul class="nav">
                        @{ int BreadcrumbCount = Model.Context.Paths.Breadcrumb.Length; }
                        @foreach (var x in @Model.Context.Paths.Breadcrumb)
                        {
                            BreadcrumbCount--;
                            if (BreadcrumbCount > 0)
                            {
                                <li class=""><a href = "@x.Href" > @x.Text</a></li>
                            }
                            else
                            {
                                <li class="active"><a href = "@x.Href" > @x.Text</a></li>
                            }
                        }
                    </ul>
                    <ul class="nav pull-right">
                        <li class="divider-vertical"></li>
                        <li id="li-btn-deploy" class="@((Model.MultiPlugAPI.Runtime.Deploy.Pending)?"active":"")"><a class="btn-deploy" href="@Raw(Model.Context.Paths.Roots.MultiPlug)actions/deploy/"><i class="icon-save"></i>&nbsp;&nbsp;Deploy @((Model.MultiPlugAPI.Runtime.Deploy.Pending)?"Pending":"")</a></li>
                        <li class="divider-vertical"></li>
                        <li class="dropdown" id="device-menu">
                            <a id="device-current" href="#" class="dropdown-toggle usermenu" data-toggle="dropdown">
                                <i class="icon-desktop"></i>&nbsp;&nbsp;
                                <span class="responsive-text">Machine Name: </span>@Model.MultiPlugAPI.Environment.MachineName
                            </a>
                            <ul id="device-list" class="dropdown-menu">
                                <li>
                                    <a href="@Raw(Model.Context.Paths.Current)"><i class="icon-desktop"></i><span>&nbsp;&nbsp;@Model.MultiPlugAPI.Environment.MachineName</span></a>
                                </li>
                            </ul>
                        </li>
                        <li class="separator notification-enabled"></li>
                        <li class="notification-enabled">
                            <a href="@Raw(Model.Context.Paths.Roots.Analytics)"><i class="icon-bell"></i><span class="responsive-text">&nbsp;&nbsp;Notifications:</span> <span id="notification-count">&nbsp;&nbsp;</span></a>
                        </li>
                        <li class="separator"></li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle usermenu" data-toggle="dropdown">
                                <img alt="Avatar" src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/images/avatar.png">
                                <span>@if(!string.IsNullOrEmpty(Model.Context.User.Identity.Name))
                                    {
                                        @Raw("&nbsp;&nbsp;")
                                        @Model.Context.User.Identity.Name
                                    }</span>
                            </a>
                            <ul class="dropdown-menu">
                                <li>
                                    @if (string.IsNullOrEmpty(Model.Context.User.Identity.Name))
                                    {
                                        <a href="/login/?referrer=@Raw(Model.Context.Paths.Current)">Log In</a>
                                    }
                                    else
                                    {
                                        <a href="@Raw(Model.Context.Paths.Roots.MultiPlug)authentication/logout">Log Out</a>
                                    }
                                </li>
                            </ul>
                        </li>
                        <li class="separator"></li>
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle usermenu" data-toggle="dropdown">
                                <i class="icon-off" style="font-size:large;line-height:24px;"></i>
                                <span class="responsive-text">&nbsp;&nbsp;System Power</span>
                            </a>
                            <ul class="dropdown-menu">
                                <li>
                                    <a class="btn-apicall" href="@Raw(Model.Context.Paths.Roots.MultiPlug)actions/power/restart"><i class="icon-undo"></i><span>&nbsp;&nbsp;Restart Device</span></a>
                                </li>
                                <li>
                                    <a class="btn-apicall" href="@Raw(Model.Context.Paths.Roots.MultiPlug)actions/power/shutdown"><i class="icon-off"></i><span>&nbsp;&nbsp;Shutdown Device</span></a>
                                </li>
                                <li>
                                    <a class="btn-apicall" href="@Raw(Model.Context.Paths.Roots.MultiPlug)actions/service/restart"><i class="icon-undo"></i><span>&nbsp;&nbsp;Restart Host Service</span></a>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </header>
    <!-- / Main navigation bar -->
    <!-- Left navigation panel
        ================================================== -->
    <nav id="left-panel">
        <div id="left-panel-content">
            <ul>
                <li class="@AppsActive lp-dropdown">
                    <a href="#" class="lp-dropdown-toggle" id="pages-dropdown"><span class="icon-dashboard"></span>Apps</a>
                    <ul class="lp-dropdown-menu simple" id="pages-dropdown-ul" data-dropdown-owner="pages-dropdown">
                        <li>
                            <a tabindex="" href="#"><i class="icon-dashboard"></i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</a>
                        </li>
                    </ul>
                </li>

                <li class="@AnalyticsActive">
                    <a href="@Raw(Model.Context.Paths.Roots.Analytics)"><span class="icon-bar-chart"></span>Analytics</a>
                </li>

                <li class="@ExtensionsActive lp-dropdown">
                    <a href="#" class="lp-dropdown-toggle" id="pages-dropdown2"><span class="icon-wrench"></span>Extensions</a>
                    <ul class="lp-dropdown-menu simple" id="pages-dropdown2-ul" data-dropdown-owner="pages-dropdown2">
                        <li>
                            <a tabindex="" href="#"><i class="icon-dashboard"></i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</a>
                        </li>
                    </ul>
                </li>

                <li class="@SettingsActive lp-dropdown">
                    <a href="#" class="lp-dropdown-toggle" id="pages-dropdown3"><span class="mpicon-multiplug-icon"></span>Settings</a>
                    <ul class="lp-dropdown-menu simple" data-dropdown-owner="pages-dropdown3">
                        <li>
                            <a tabindex="@GetTabIndex()" href="@Raw(Model.Context.Paths.Roots.System)"><i class="icon-tasks"></i>&nbsp;&nbsp;Overview</a>
                        </li>
                        <li>
                            <a tabindex="@GetTabIndex()" href="@Raw(Model.Context.Paths.Roots.System)environment/"><i class="icon-umbrella"></i>&nbsp;&nbsp;Environment</a>
                        </li>
                        <li>
                            <a tabindex="@GetTabIndex()" href="@Raw(Model.Context.Paths.Roots.System)hosting/"><i class="icon-cloud"></i>&nbsp;&nbsp;Hosting</a>
                        </li>
                        <li>
                            <a tabindex="@GetTabIndex()" href="@Raw(Model.Context.Paths.Roots.System)extensions/"><i class="icon-puzzle-piece"></i>&nbsp;&nbsp;Extensions</a>
                        </li>
                        <li>
                            <a tabindex="@GetTabIndex()" href="@Raw(Model.Context.Paths.Roots.System)apps/"><i class="icon-dashboard"></i>&nbsp;&nbsp;Apps</a>
                        </li>
                        <li>
                            <a tabindex="@GetTabIndex()" href="@Raw(Model.Context.Paths.Roots.System)recipes/"><i class="icon-sort-by-attributes-alt"></i>&nbsp;&nbsp;Recipes</a>
                        </li>
                        <li>
                            <a tabindex="@GetTabIndex()" href="@Raw(Model.Context.Paths.Roots.System)security/"><i class="icon-lock"></i>&nbsp;&nbsp;Security</a>
                        </li>
                        <li>
                            <a tabindex="@GetTabIndex()" href="@Raw(Model.Context.Paths.Roots.System)permissions/"><i class="icon-star"></i>&nbsp;&nbsp;Permissions</a>
                        </li>
                        <li>
                            <a tabindex="@GetTabIndex()" href="@Raw(Model.Context.Paths.Roots.System)performance/"><i class="icon-signal"></i>&nbsp;&nbsp;Performance</a>
                        </li>
                        <li>
                            <a tabindex="@GetTabIndex()" href="@Raw(Model.Context.Paths.Roots.System)housekeeping/"><i class="icon-trash"></i>&nbsp;&nbsp;Housekeeping</a>
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
        <div class="icon-caret-down"></div>
        <div class="icon-caret-up"></div>
    </nav>

    <script src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.mplib/scripts/bootstrap.js" type="text/javascript"></script>
    <script src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/scripts/adminflare.min.1.0.29.js" type="text/javascript"></script>
    <script src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.mplib/scripts/websocket.min.js" type="text/javascript"></script>
    <script src="stream/hubs"></script>
    <script src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.mplib/scripts/multiplug.js?id=@Model.Context.WebSocketId" type="text/javascript"></script>

    <!-- / Left navigation panel -->
    <!-- Page content
        ================================================== -->
    <section class="container full-height">
        @RenderBody()
    </section>
    <div class="notifications top-right"></div>
    <script src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.mplib/scripts/eventpicker.js" type="text/javascript"></script>
    <script src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/scripts/multiplug.selectize.js"></script>
    <script src="@Raw(Model.Context.Paths.Roots.Assets)multiplug.ext.thm.default2016/scripts/deploy.js"></script>

    <script>
        var alertTimerId = 0;

        function ToggleActiveClass() {
            $("#li-btn-deploy").toggleClass("active");
            $(".btn-deploy").html('<i class="icon-save"></i>&nbsp;&nbsp;Deploy Pending');
        }

        function StartToggleActiveClass() {
            alertTimerId = setInterval("ToggleActiveClass()", 1000);
        }

        function StopToggleActiveClass() {
            clearInterval(alertTimerId);
            $("#li-btn-deploy").removeClass("active");
            $(".btn-deploy").html('<i class="icon-save"></i>&nbsp;&nbsp;Deploy');
        }

        function NewMenuItem(theHref, theName, theIcon) {
            return '<li style="display: block; width: 100%;"><a style="display: block; width: 100%;" href="' + theHref + '"><i class="' + theIcon + '"></i>&nbsp;&nbsp;' + theName + '</a></li>'
        }

        function NewMobileMenuItem(theHref, theName, theSection) {
            return '<li><a tabindex="" href="' + theHref + '">' + theSection + ' / &nbsp;&nbsp;' + theName + '</a></li>'
        }

        function UpdateAppListing(isMobile) {
            var Count = 0;
            $.ajax({
                url: "@Raw(Model.Context.Paths.Roots.MultiPlug)httpendpoints/apps",
                type: "get",
                async: false,
                success: function (data) {
                    var AppsUL = $("#pages-dropdown-ul");
                    var builder = [];
                    for (let i in data) {
                        if (!data[i].isHidden) {
                            if (isMobile) {
                                builder.push(NewMobileMenuItem(data[i].href, data[i].name, "Apps"));
                            }
                            else {
                                builder.push(NewMenuItem(data[i].href, data[i].name, 'icon-dashboard'));
                            }
                        }
                    }
                    AppsUL.empty();
                    AppsUL.append(builder.join(''));
                    Count =  data.length;
                },
                error: function () {
                    var AppsUL = $("#pages-dropdown-ul");
                    var builder = [];
                    if (isMobile) {
                        builder.push(NewMobileMenuItem('@Raw(Model.Context.Paths.Roots.Apps)', 'Overview', "Apps"));
                    }
                    else {
                        builder.push(NewMenuItem('@Raw(Model.Context.Paths.Roots.Apps)', 'Overview', 'icon-dashboard'));
                    }
                    AppsUL.empty();
                    AppsUL.append(builder.join(''));
                    Count = 1;
                }
            });

            return Count;
        }

        function UpdateExtensionListing(isMobile) {
            var Count = 0;

            $.ajax({
                url: "@Raw(Model.Context.Paths.Roots.MultiPlug)httpendpoints/settings",
                type: "get",
                async: false,
                success: function (data) {
                    var SettingsUL = $("#pages-dropdown2-ul");
                    var builder = [];
                    for (let i in data) {
                        if (!data[i].isHidden) {
                            if (isMobile) {
                                builder.push(NewMobileMenuItem(data[i].href, data[i].name, "Extenions"));
                            }
                            else {
                                builder.push(NewMenuItem(data[i].href, data[i].name, 'icon-puzzle-piece'));
                            }

                        }
                    }
                    SettingsUL.empty();
                    SettingsUL.append(builder.join(''));
                    Count = data.length;
                },
                error: function () {
                    var SettingsUL = $("#pages-dropdown2-ul");
                    var builder = [];
                    if (isMobile) {
                        builder.push(NewMobileMenuItem('@Raw(Model.Context.Paths.Roots.Settings)', 'Overview', "Extenions"));
                    }
                    else {
                        builder.push(NewMenuItem('@Raw(Model.Context.Paths.Roots.Settings)', 'Overview', 'icon-puzzle-piece'));
                    }
                    SettingsUL.empty();
                    SettingsUL.append(builder.join(''));
                    Count = 1;
                }
            });

            return Count;
        }

        $(document).ready(function () {
            $.connection.wS.on("Send", function (id, Group) {
                if (id == "@Raw(Model.MultiPlugAPI.Runtime.Deploy.EventId)") {

                    if (Group.Subjects[0].Value == 'true') {
                        StartToggleActiveClass();
                    }
                    else {
                        StopToggleActiveClass();
                    }
                }
                else if(id == "System-Notification")
                {
                    $("#notification-count").text(Group.Subjects[6].Value);
                }
            });

            $('#lp-active').on('click', function (e) {
                if ($("#left-panel").hasClass("open"))
                {
                    e.preventDefault();
                    var itemscount = UpdateAppListing(true);    // Apps
                    itemscount = itemscount + UpdateExtensionListing(true); // Extensions
                    itemscount = itemscount + 1; // Heading
                    itemscount = itemscount + 1; // Analytics
                    itemscount = itemscount + 10; // Settings
                    var menuheight = itemscount * 36.03; // 36 Px for each Menu item
                    console.log(menuheight);
                    $('#left-panel').height(menuheight)
                }
            });

            $('#pages-dropdown').on('click', function (e) {
                e.preventDefault();
                UpdateAppListing(false);
            });

            $('#pages-dropdown2').on('click', function (e) {
                e.preventDefault();
                UpdateExtensionListing(false);
            });

            $(".btn-apicall").click(function (event) {
                event.preventDefault();
                var actionUrl = $(this).attr('href');
                if (actionUrl.includes("service"))
                {
                    $("#power-title").text("System Host Restart");
                    $("#power-txt-line1").text("While the system restarts the user interface will become unresponsive. The page will be refreshed automatically once the system has been restarted.");
                    $("#power-txt-line2").text("Confirm your required action now and then wait for the system host to be restarted.");
                }
                else if (actionUrl.includes("restart"))
                {
                    $("#power-title").text("System Device Restart");
                    $("#power-txt-line1").text("While the system restarts the user interface will become unresponsive. The page will be refreshed automatically once the system has been restarted.");
                    $("#power-txt-line2").text("Confirm your required action now and then wait for the system device to be restarted.");
                }
                else
                {
                    $("#power-title").text("System Shutdown");
                    $("#power-txt-line1").text("After this point the user interface will become unresponsive as the system will shut down.");
                    $("#power-txt-line2").text("Confirm your required action now.");
                }
                $('#power-form').attr('action', $(this).attr('href'));
                $('#power-modal').modal('show');
            });

            $("#power-form").submit(function (e) {
                e.preventDefault();
                var form = $(this);
                var actionUrl = form.attr('action');
                $(".btns-power").hide();

                if (actionUrl.includes("service")) {
                    $("#power-title").text("System Host is Restarting...");
                    $("#power-txt-line2").text($("#power-txt-line1").text());
                    $("#power-txt-line1").text("The system host is restarting, please wait.");
                }
                else if (actionUrl.includes("restart")) {
                    $("#power-title").text("System Device is Restarting...");
                    $("#power-txt-line2").text($("#power-txt-line1").text());
                    $("#power-txt-line1").text("The system device is restarting, please wait.");
                }
                else {
                    $("#power-title").text("System Device Shutdown...");
                    $("#power-txt-line1").text("The system is shutting down.");
                    $("#power-txt-line2").text("");
                }

                $.get("/multiplug/status/", function (data) {
                    oldStartupTime = data.startuptime;

                    $.ajax({
                        type: "POST",
                        url: actionUrl,
                        data: form.serialize(),
                        success: function (data) {
                            checkStartupTime();
                        },
                        error: function (data) {
                            $('#power-modal').modal('hide');
                            if (data.status == 401) {
                                alert('Action requires User Log On');
                            }
                            if (data.status == 403) {
                                alert('Insufficient user rights');
                            }
                        }
                    });
                });
            });

            $("#device-current").click(function (event) {
                event.preventDefault();

                if ($("#device-menu").hasClass("open")) // Closing
                {
                    return;
                }
                var DeviceList = $("#device-list");
                DeviceList.append('<li><a href=""><i class="icon-refresh icon-spin"></i><span>&nbsp;&nbsp;Updating List...</span></a></li>');

                $.get("/multiplug/ssdp/discover", function (data) {

                    var builder = [];
                    builder.push('<li><a href="@Raw(Model.Context.Paths.Current)"><i class="icon-desktop"></i><span>&nbsp;&nbsp;@Raw(Model.MultiPlugAPI.Environment.MachineName)</span></a></li>');
                    for (let i in data.discovered) {
                        builder.push('<li><a href="' + data.discovered[i].presentationURL + '" target="_blank"><i class="icon-desktop"></i><span>&nbsp;&nbsp;' + data.discovered[i].friendlyName + '</span></a></li>');
                    }
                    DeviceList.empty();
                    DeviceList.append(builder.join(''));
                })
                .fail(function () {
                    $("#device-list li").last().remove();
                });
            });

            $.ajax({
                url: "@Raw(Model.Context.Paths.Roots.MultiPlug)notifications/count",
                type: "get",
                success: function (data) {
                    $("#notification-count").text(data.count);
                },
                error: function (data) {
                    $(".notification-enabled").remove();
                }
            });

            @if(Model.Context.Paths.Breadcrumb.Length > 0)
            {
                <text>$('#lp-active').text("</text>@Model.Context.Paths.Breadcrumb[Model.Context.Paths.Breadcrumb.Length - 1].Text<text>");</text>
            }
            else
            {
                <text>$('#lp-active').text("</text>@Model.Extension.Name<text>");</text>
            }


@{
        if ( Model.MultiPlugAPI.Runtime.Deploy.Pending)
        {
            <text>StartToggleActiveClass();</text>
        }
}
        });

        var oldStartupTime = "";

        function checkStartupTime() {
            $.get("/multiplug/status/", function (data) {
                if (data.startuptime != null && data.startuptime != oldStartupTime) {
                    location.reload();
                }
                else {
                    setTimeout(check, 1500);
                }
            })
              .fail(function () {
                  setTimeout(check, 1500);
              });
        }
    </script>

    <!-- Websocket Reconnect Modal -->
    <div id="websocket-reconnect-modal" class="modal hide fade" role="dialog" aria-hidden="true" data-backdrop="static" data-keyboard="false">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 id="websocket-title" class="modal-title">Connection disconnected with MultiPlug</h4>
                </div>
                <div class="modal-body">
                    <p id="websocket-txt-line1">The connection to the MultiPlug Host has been lost. Attempts are being made to restore the connection.</p>
                    <p id="websocket-txt-line2">Please wait.</p>
                </div>
                <div class="modal-footer">
                </div>
            </div>

        </div>
    </div>

    <!-- Power Modal -->
    <form id="power-form" >
        <div id="power-modal" class="modal hide fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close btns-power" data-dismiss="modal">&times;</button>
                        <h4 id="power-title" class="modal-title">System Restart</h4>
                    </div>
                    <div class="modal-body">
                        <p id="power-txt-line1">While the system restarts the user interface will become unresponsive. The page will be refreshed automatically once the system has been restarted.</p>
                        <p id="power-txt-line2">Confirm your required action now and then wait for the system to be restarted.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default btns-power" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-red btns-power">Continue</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</body>
</html>