@model MultiPlug.Base.Http.EdgeApp
@{
    Layout = "MultiPlug.Ext.Thm.Default2016.Layout";
}

<style>
    .setting-heading h2 {
        margin-left: 0.1em;
        margin-top: 0px;
        margin-bottom: 20px;
    }
</style>

<div class="setting-heading">
    <h2><i class="icon-umbrella"></i>&nbsp;Environment</h2>
</div>

<h3 class="box-header">
    General
</h3>
<div class="box non-collapsible">
    <div class="row-fluid" id="div-logginglevel">
        <div class="span6">
            <p>Logging Level :</p>
        </div>
        <div class="span4">
            <select id="input-logginglevel" class="input-block-level"></select>
        </div>
        <div class="span2">
            <a id="btn-loggingsave" class="btn btn-green"><i class="icon-save"></i> Save</a>
        </div>
    </div>
    <div class="row-fluid" id="div-location">
        <div class="span6">
            <p>Physical Location :</p>
        </div>
        <div class="span4">
            <input id="input-location" class="input-block-level" type="text">
        </div>
        <div class="span2">
            <a id="btn-locationsave" class="btn btn-green"><i class="icon-save"></i> Save</a>
        </div>
    </div>
</div>

<h3 class="box-header">
    Localisation
</h3>
<div class="box non-collapsible">
    <div id="div-localisation">
        <div class="row-fluid">
            <div class="span6">
                <p>Country :</p>
            </div>
            <div class="span4">
                <select id="input-country" class="input-block-level"></select>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span6">
                <p>Language :</p>
            </div>
            <div class="span4">
                <select id="input-language" class="input-block-level"></select>
            </div>
        </div>

        <div class="row-fluid">
            <div class="span6">
            </div>
            <div class="span4">
                <a id="btn-localisationsave" class="btn btn-green"><i class="icon-save"></i> Save</a>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function OnSuccess(data) {
        var input = $("#input-country")
        input.empty();

        for (let i in data.countryOptions) {

            if (data.countryOptions[i].alphaTwo == data.country) {
                input.append('<option value="' + data.countryOptions[i].alphaTwo + '" selected>' + data.countryOptions[i].country + '</option>');
            }
            else {
                input.append('<option value="' + data.countryOptions[i].alphaTwo + '">' + data.countryOptions[i].country + '</option>');
            }
        }

        input = $("#input-language")
        input.empty();

        for (let i in data.languageOptions) {

            if (data.languageOptions[i].alphaTwo == data.language) {
                input.append('<option value="' + data.languageOptions[i].alphaTwo + '" selected>' + data.languageOptions[i].language + '</option>');
            }
            else {
                input.append('<option value="' + data.languageOptions[i].alphaTwo + '">' + data.languageOptions[i].language + '</option>');
            }
        }
    }

    function OnLoggingSuccess(data) {
        var input = $("#input-logginglevel")
        input.empty();

        for (let i in data.levelOptions) {

            if (data.levelOptions[i] == data.level) {
                input.append('<option value="' + data.levelOptions[i] + '" selected>' + data.levelOptions[i] + '</option>');
            }
            else {
                input.append('<option value="' + data.levelOptions[i] + '">' + data.levelOptions[i] + '</option>');
            }
        }
    }

    function OnLocationSuccess(data) {
        $("#input-location").val(data.location);
    }

    function OnError(xhr) {
        if (xhr.status == 401) {
            alert('Action requires User Log On');
        }
        if (xhr.status == 403) {
            alert('Insufficient user rights');
        }
    }

    $(document).ready(function () {
        $("#btn-loggingsave").click(function (event) {
            event.preventDefault();

            $.ajax({
                type: 'POST',
                url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/logging?level=" + $('#input-logginglevel').val(),
                async: false,
                success: function (data) {
                    OnLoggingSuccess(data)
                    alert("Save Successful");
                },
                error: function (data) {
                    OnError(data);
                }
            });
        });

        $("#btn-locationsave").click(function (event) {
            event.preventDefault();

            $.ajax({
                type: 'POST',
                url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/location?location=" + $('#input-location').val(),
                async: false,
                success: function (data) {
                    OnLocationSuccess(data);
                    alert("Save Successful");
                },
                error: function (data) {
                    OnError(data);
                }
            });
        });


    	$("#btn-localisationsave").click(function (event) {
    	    event.preventDefault();

    	    $.ajax({
    	        type: 'POST',
    	        url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/localisation?country=" + $('#input-country').val() + "&language=" + $('#input-language').val(),
    	        async: false,
    	        success: function (data) {
                    OnSuccess(data);
    	            alert("Save Successful");
    	        },
    	        error: function (data) {
    	            OnError(data);
    	        }
    	    });
    	});

        $.ajax({
            url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/localisation",
            type: "GET",
            success: function (data) {
                OnSuccess(data);
            },
            error: function (data) {
                if (data.status == 401 || data.status == 403) {
                    var d = $("#div-localisation");
                    d.empty();
                    d.append('<span class="label label-red">INSUFFICIENT USER RIGHTS</span>');
                }
            }
        });

        $.ajax({
            url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/logging",
            type: "GET",
            success: function (data) {
                OnLoggingSuccess(data);
            },
            error: function (data) {
                if (data.status == 401 || data.status == 403) {
                    var d = $("#div-logginglevel");
                    d.empty();
                    d.append('<div class="span6"><p>Logging Level :</p></div><div class="span4"><span class="label label-red">INSUFFICIENT USER RIGHTS</span></div>');
                }
            }
        });

        $.ajax({
            url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/location",
            type: "GET",
            success: function (data) {
                OnLocationSuccess(data);
            },
            error: function (data) {
                if (data.status == 401 || data.status == 403) {
                    var d = $("#div-location");
                    d.empty();
                    d.append('<div class="span6"><p>Physical Location :</p></div><div class="span4"><span class="label label-red">INSUFFICIENT USER RIGHTS</span></div>');
                }
            }
        });
    });
</script>