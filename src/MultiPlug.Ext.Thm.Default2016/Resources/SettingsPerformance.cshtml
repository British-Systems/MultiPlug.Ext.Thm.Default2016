@model MultiPlug.Base.Http.EdgeApp
@{
    Layout = "MultiPlug.Ext.Thm.Default2016.Layout";
}

<style>
    .setting-heading h2 {
        margin-left: 0.1em;
        margin-top: 0px;
        margin-bottom: 20px;
    }

    input[type="radio"],input[type="checkbox"] {
        margin-top: 0px;
        margin-bottom: 10px;
        min-height: 30px;
    }
</style>

<div class="setting-heading">
    <h2><i class="icon-signal"></i>&nbsp;Performance</h2>
</div>

<h3 class="box-header">
    Assets Cache Defaults
</h3>
<div class="box" id="div-assetscache">
    <div class="row-fluid">
        <div class="span6">
            <p>Seconds :</p>
        </div>
        <div class="span2">
            <input id="input-assetsseconds" class="input-block-level" type="number" min="0" max="59" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Minutes :</p>
        </div>
        <div class="span2">
            <input id="input-assetsminutes" class="input-block-level" type="number" min="0" max="59" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Hours :</p>
        </div>
        <div class="span2">
            <input id="input-assetshours" class="input-block-level" type="number" min="0" max="23" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Days :</p>
        </div>
        <div class="span2">
            <input id="input-assetsdays" class="input-block-level" type="number" min="0" max="365" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
        </div>
        <div class="span2">
            <button id="btn-assetscache" type="button" class="btn btn-green"><i class="icon-save"></i> Save</button>
        </div>
    </div>
</div>

<h3 class="box-header">
    Internet Connection
</h3>
<div class="box" id="div-internet">
    <div class="row-fluid">
        <div class="span6">
            <p>Check Enabled :</p>
        </div>
        <div class="span6">
            <input id="input-internetenabled" type="checkbox" />
        </div>
    </div>

    <div class="row-fluid">
        <div class="span6">
            <p>Ping IP Address :</p>
        </div>
        <div class="span6">
            <div class="span11 input-prepend">
                <div class="btn-group">
                    <button class="btn dropdown-toggle" data-toggle="dropdown">
                        <span class="caret">
                        </span>
                    </button>
                    <ul class="dropdown-menu" id="apps-suggestion">
                        <li><a class="IPAddressSuggestion" data-suggestion="8.8.8.8" href="#">Google DNS 1</a></li>
                        <li><a class="IPAddressSuggestion" data-suggestion="8.8.4.4" href="#">Google DNS 2</a></li>
                        <li><a class="IPAddressSuggestion" data-suggestion="1.1.1.1" href="#">Cloudflare 1</a></li>
                        <li><a class="IPAddressSuggestion" data-suggestion="1.0.0.1" href="#">Cloudflare 2</a></li>
                        <li><a class="IPAddressSuggestion" data-suggestion="208.67.222.222" href="#">OpenDNS 1</a></li>
                        <li><a class="IPAddressSuggestion" data-suggestion="208.67.220.220" href="#">OpenDNS 2</a></li>
                    </ul>
                </div>
                <input id="input-internetipaddress" class="input-block-level" type="text" autocomplete="off">
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Interval Check (Seconds) :</p>
        </div>
        <div class="span6">
            <input id="input-internetinterval" class="span3" type="number" min="0" max="3600" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
        </div>
        <div class="span6">
            <button id="btn-internetsave" type="button" class="btn btn-green"><i class="icon-save"></i> Save</button>
        </div>
    </div>
</div>

<h3 class="box-header">
    Extension Handling
</h3>
<div class="box" id="div-extensionhandling">

    <div class="row-fluid">
        <div class="span6">
            <p>Enable New Extensions :</p>
        </div>
        <div class="span4">
            <input id="check-extensionsenabledwheninstalled" type="checkbox" />
        </div>
    </div>

    <div class="row-fluid">
        <div class="span6">
            <p>Extension Unhandled Exception Action :</p>
        </div>
        <div class="span4">
            <select id="input-extensionsactiononunhandledexception" class="input-block-level">
            </select>
        </div>
    </div>

    <div class="row-fluid">
        <div class="span6">
            <p>Disable the Extension after an Unhandled Exception :</p>
        </div>
        <div class="span4">
            <input id="check-extensionsdisabledafterunhandledexception" type="checkbox" />
        </div>
    </div>

    <div class="row-fluid">
        <div class="span6">
        </div>
        <div class="span4">
            <a class="btn btn-green" id="btn-extensionhandlingsave"><i class="icon-save"></i> Save</a>
        </div>
    </div>
</div>

<h3 class="box-header">
    Extension Timeouts
</h3>
<div class="box" id="div-timeouts">
    <div class="row-fluid">
        <div class="span6">
            <p>Initialise (Seconds) :</p>
        </div>
        <div class="span2">
            <input id="input-timeoutinitialise" class="input-block-level" type="number" min="1" max="59" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Start (Seconds) :</p>
        </div>
        <div class="span2">
            <input id="input-timeoutstart" class="input-block-level" type="number" min="1" max="59" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Pause (Seconds) :</p>
        </div>
        <div class="span2">
            <input id="input-timeoutpause" class="input-block-level" type="number" min="1" max="59" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Shutdown (Seconds) :</p>
        </div>
        <div class="span2">
            <input id="input-timeoutshutdown" class="input-block-level" type="number" min="1" max="59" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Unload (Seconds) :</p>
        </div>
        <div class="span2">
            <input id="input-timeoutunload" class="input-block-level" type="number" min="1" max="59" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Save (Seconds) :</p>
        </div>
        <div class="span2">
            <input id="input-timeoutsave" class="input-block-level" type="number" min="1" max="59" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Load (Seconds) :</p>
        </div>
        <div class="span2">
            <input id="input-timeoutload" class="input-block-level" type="number" min="1" max="59" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Recipe (Seconds) :</p>
        </div>
        <div class="span2">
            <input id="input-timeoutrecipe" class="input-block-level" type="number" min="1" max="59" step="1">
        </div>
    </div>
    <div class="row-fluid">
        <div class="span6">
            <p>Timeouts in Isolation :</p>
        </div>
        <div class="span4">
            <input id="check-extensionsisolation" type="checkbox" checked />
        </div>
    </div>

    <div class="row-fluid">
        <div class="span6">
            <p>Razor Compile Time :</p>
        </div>
        <div class="span4">
            <select id="select-extensionsrazorcompiletime" class="input-block-level">
            </select>
        </div>
    </div>


    <div class="row-fluid">
        <div class="span6">
        </div>
        <div class="span2">
            <button id="btn-timeoutssave" type="button" class="btn btn-green"><i class="icon-save"></i> Save</button>
        </div>
    </div>
</div>
<div class="row-fluid">
    <div class="span12"></div>
</div>

<script>
    $('.IPAddressSuggestion').click(function (event) {
        event.preventDefault();
        $("#input-internetipaddress").val($(this).attr("data-suggestion"));
    });

    function OnError(xhr) {
        if (xhr.status == 401) {
            alert('Action requires User Log On');
        }
        if (xhr.status == 403) {
            alert('Insufficient user rights');
        }
    }

    function OnSuccess( data )
    {
        $("#check-extensionsenabledwheninstalled").prop("checked", data.extensionsEnabledWhenInstalled);
        $("#check-extensionsdisabledafterunhandledexception").prop("checked", data.extensionsDisabledAfterUnhandledException);
        var input = $("#input-extensionsactiononunhandledexception")
        input.empty();

        for (let i in data.extensionsActionsOnUnhandledException) {

            if (data.extensionsActionsOnUnhandledException[i] == data.extensionsActionOnUnhandledException) {
                input.append('<option value="' + data.extensionsActionsOnUnhandledException[i] + '" selected>' + data.extensionsActionsOnUnhandledException[i].replace(/([A-Z])/g, ' $1').trim() + '</option>');
            }
            else {
                input.append('<option value="' + data.extensionsActionsOnUnhandledException[i] + '">' + data.extensionsActionsOnUnhandledException[i].replace(/([A-Z])/g, ' $1').trim() + '</option>');
            }
        }
    }

    function OnSuccessAssetsCache(data) {
        $("#input-assetsseconds").val(data.seconds);
        $("#input-assetsminutes").val(data.minutes);
        $("#input-assetshours").val(data.hours);
        $("#input-assetsdays").val(data.days);
    }

    function OnSuccessTimeouts(data)
    {
        $("#input-timeoutinitialise").val(data.initialise);
        $("#input-timeoutstart").val(data.start);
        $("#input-timeoutpause").val(data.pause);
        $("#input-timeoutshutdown").val(data.shutdown);
        $("#input-timeoutunload").val(data.unload);
        $("#input-timeoutsave").val(data.save);
        $("#input-timeoutload").val(data.load);
        $("#input-timeoutrecipe").val(data.recipe);
        $("#check-extensionsisolation").prop("checked", data.isolation);

        var input = $("#select-extensionsrazorcompiletime");
        input.empty();

        const options = ["Just In Time Per Page", "On First Extension Use", "Startup"];

        for (let i in options) {

            if (i == data.razorCompileTime) {
                input.append('<option value="' + i + '" selected>' + options[i] + '</option>');
            }
            else {
                input.append('<option value="' + i + '">' + options[i] + '</option>');
            }
        }
    }

    function OnSuccessNetConnection(data)
    {
        $("#input-internetenabled").prop("checked", data.enabled);
        $("#input-internetipaddress").val(data.ipAddress);
        $("#input-internetinterval").val(data.interval);
    }

    $(document).ready(function () {
        $("#btn-extensionhandlingsave").click(function (event) {
            event.preventDefault();

            $.ajax({
                type: 'POST',
                url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/extensions?extensionsenabledwheninstalled=" + $('#check-extensionsenabledwheninstalled').is(":checked") + "&ExtensionsActionOnUnhandledException=" + $('#input-extensionsactiononunhandledexception').val() + "&ExtensionsDisabledAfterUnhandledException=" + $('#check-extensionsdisabledafterunhandledexception').is(":checked"),
                async: false,
                success: function (data) {
                    OnSuccess(data);
                    alert("Save Successful");
                },
                error: function (data) {
                    OnError(data);
                }
            });
        });

        $("#btn-assetscache").click(function (event) {
            event.preventDefault();

            $.ajax({
                type: 'POST',
                url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/assetscache?seconds=" + $('#input-assetsseconds').val() +
                    "&minutes=" + $('#input-assetsminutes').val() +
                    "&hours=" + $('#input-assetshours').val() +
                    "&days=" + $('#input-assetsdays').val(),
                async: false,
                success: function (data) {
                    OnSuccessAssetsCache(data);
                    alert("Save Successful");
                },
                error: function (data) {
                    OnError(data);
                }
            });
        });

        $("#btn-timeoutssave").click(function (event) {
            event.preventDefault();

            $.ajax({
                type: 'POST',
                url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/timeouts?initialise=" + $('#input-timeoutinitialise').val() +
                    "&start=" + $('#input-timeoutstart').val() +
                    "&pause=" + $('#input-timeoutpause').val() +
                    "&shutdown=" + $('#input-timeoutshutdown').val() +
                    "&unload=" + $('#input-timeoutunload').val() +
                    "&save=" + $('#input-timeoutsave').val() +
                    "&load=" + $('#input-timeoutload').val() +
                    "&recipe=" + $('#input-timeoutrecipe').val() +
                    "&isolation=" + $('#check-extensionsisolation').is(":checked") +
                    "&razorcompiletime=" + $('#select-extensionsrazorcompiletime').val(),
                async: false,
                success: function (data) {
                    OnSuccessTimeouts(data);
                    alert("Save Successful");
                },
                error: function (data) {
                    OnError(data);
                }
            });
        });

        $("#btn-internetsave").click(function (event) {
            event.preventDefault();
            $.ajax({
                type: 'POST',
                url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/netconnection?enabled=" + $('#input-internetenabled').is(":checked") +
                    "&ipaddress=" + $('#input-internetipaddress').val() +
                    "&interval=" + $('#input-internetinterval').val(),
                async: false,
                success: function (data) {
                    OnSuccessNetConnection(data);
                    alert("Save Successful");
                },
                error: function (data) {
                    OnError(data);
                }
            });
        });

        $.ajax({
            url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/extensions",
            type: "get",
            success: function (data) {
                OnSuccess(data);
            },
            error: function (data) {
                if (data.status == 401 || data.status == 403) {
                    var d = $("#div-extensionhandling");
                    d.empty();
                    d.append('<span class="label label-red">INSUFFICIENT USER RIGHTS</span>');
                }
            }
        });

        $.ajax({
            url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/assetscache",
            type: "get",
            success: function (data) {
                OnSuccessAssetsCache(data);
            },
            error: function (data) {
                if (data.status == 401 || data.status == 403) {
                    var d = $("#div-assetscache");
                    d.empty();
                    d.append('<span class="label label-red">INSUFFICIENT USER RIGHTS</span>');
                }
            }
        });

        $.ajax({
            url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/timeouts",
            type: "get",
            success: function (data) {
                OnSuccessTimeouts(data);
            },
            error: function (data) {
                if (data.status == 401 || data.status == 403) {
                    var d = $("#div-timeouts");
                    d.empty();
                    d.append('<span class="label label-red">INSUFFICIENT USER RIGHTS</span>');
                }
            }
        });

        $.ajax({
            url: "@Raw(Model.Context.Paths.Roots.MultiPlug)configuration/netconnection",
            type: "get",
            success: function (data) {
                OnSuccessNetConnection(data);
            },
            error: function (data) {
                if (data.status == 401 || data.status == 403) {
                    var d = $("#div-internet");
                    d.empty();
                    d.append('<span class="label label-red">INSUFFICIENT USER RIGHTS</span>');
                }
            }
        });
    });
</script>