@model MultiPlug.Base.Http.EdgeApp
@{
    Layout = "MultiPlug.Ext.Thm.Default2016.Layout";
}

<div>
    <h2>Housekeeping</h2>
</div>

<div class="box">
    <div class="row-fluid">
        <div class="span5">
            <h4>Log Files</h4>
        </div>
        <div class="span7">
            <h4 id="FileNameHeading">File:</h4>
        </div>
    </div>

    <div class="row-fluid">
        <div class="span5">
            <div id="jstree">
                <ul>
                    <li>
                        MultiPlug.Core
                        <ul>
                            @foreach (var FileListing in Model.Extension.Model.SystemFileStorage)
                            {
                                <li data-jstree='{"icon":"jstree-file"}' data-filename="@FileListing.FullName" data-multiplugapi="@Raw(Model.Context.Paths.Roots.MultiPlug)housekeeping/files/system/view/@FileListing.FullName">
                                    <a href="#">@Raw((!FileListing.Orphan) ? "(In use) " : "")@FileListing.FullName</a>
                                </li>
                            }
                        </ul>
                    </li>

                    @foreach (var FileStorage in @Model.Extension.Model.FileStorage)
                    {
                        <li>
                            @FileStorage.Extension
                            <ul>
                                @foreach (var FileListing in FileStorage.FileStatues)
                                {
                                    <li data-jstree='{"icon":"jstree-file"}' data-filename="@FileListing.FullName" data-extension="@FileStorage.Extension" data-multiplugapi="@Raw(Model.Context.Paths.Roots.MultiPlug)housekeeping/files/extensions/@FileStorage.Extension/view/@FileListing.FullName">
                                        <a href="#">@Raw((!FileListing.Orphan) ? "(In use) " : "")@FileListing.FullName</a>
                                    </li>
                                }
                            </ul>
                        </li>
                    }
                </ul>
            </div>
        </div>

        <div class="span7">
            <div class="row-fluid">
                <textarea id="Logging" spellcheck="false" rows="3" class="input-block-level" wrap="off" style="margin: 0px; height: 450px;"></textarea>
            </div>
            <div class="row-fluid">
                <div class="span6">
                    <p>Use the shift key to select multiple files</p>
                </div>
                <div class="span2">
                    <a class="btn btn-block btn-blue" id="btn-viewfile"><i class="icon-search"> View</i></a>
                </div>
                <div class="span2">
                    <a class="btn btn-block btn-blue" id="btn-downloadfile"><i class="icon-download-alt"> Download</i></a>
                </div>
                <div class="span2">
                    <a class="btn btn-block btn-red" id="btn-deletefile"><i class="icon-trash"> Delete</i></a>
                </div>
            </div>
        </div>
    </div>
</div>

<link rel="stylesheet" href="assets/multiplug.ext.mplib/styles/jstree.style.min.css" />
<script src="assets/multiplug.ext.mplib/scripts/jstree.min.js"></script>

<script>
    function scrollLogToBottom(loggingTextArea) {
        var textarea = document.getElementById(loggingTextArea);
        textarea.scrollTop = textarea.scrollHeight;
    }

    $('#jstree').jstree({
        "core": {
            "multiple": true,
            "animation": 0,
            "check_callback": true,
        }
    });

    var NodesSelected

    $('#jstree').on("changed.jstree", function (e, data) {
        NodesSelected = data.selected;

        var SelectedFile = $('#' + NodesSelected[0]);
        var APIUrl = SelectedFile.attr("data-multiplugapi");

        if (typeof APIUrl !== 'undefined' && APIUrl !== false) {
            $('#FileNameHeading').text("File: " + SelectedFile.attr("data-filename"));
            $("#btn-downloadfile").removeAttr('href');
            $('#btn-downloadfile').attr('download', SelectedFile.attr("data-filename"));
            $('#Logging').val('');
        }
    });

    function GetUrl( Selected )
    {
        var SelectedFile = $('#' + Selected);
        var APIUrl = SelectedFile.attr("data-multiplugapi");

        if (typeof APIUrl !== 'undefined' && APIUrl !== false) {
            var FileName = SelectedFile.attr("data-filename");
            var ExtensionName = SelectedFile.attr("data-extension");
            if (ExtensionName) {
                return 'multiplug/housekeeping/files/extensions/' + ExtensionName + '/delete/' + FileName;
            }
            else {
                return 'multiplug/housekeeping/files/system/delete/' + FileName;
            }
        }

        return '';
    }

    $("#btn-viewfile").click(function (event) {
        event.preventDefault();

        if (NodesSelected == null || NodesSelected.length == 0) {
            return;
        }

        $('#Logging').val('Loading File...');

        $.get($('#' + NodesSelected[0]).attr("data-multiplugapi"), function (data) {

        })
        .done(function (data) {
            var LoggingBox = $('#Logging');
            var builder = [];
            data.forEach(function (line) {
                builder.push(line);
                builder.push("\n");
            });
            LoggingBox.val('');
            var LogContents = builder.join('');
            LoggingBox.val(LogContents);
            $('#btn-downloadfile').attr('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(LogContents));
            scrollLogToBottom('Logging');
        });
    });

    $("#btn-deletefile").click(function (event) {
        event.preventDefault();

        if (NodesSelected == null || NodesSelected.length == 0) {
            return;
        }

        var NodesSelectedSnapshot = NodesSelected; // Will change on Delete

        for (let i = 0; i < NodesSelectedSnapshot.length; i++) {
            $.ajax({
                type: 'POST',
                url: GetUrl(NodesSelectedSnapshot[i]),
                async: false
            });
            $("#jstree").jstree(true).delete_node(NodesSelectedSnapshot[i]);
        }

        NodesSelected = null;

        $("#btn-downloadfile").removeAttr('href');
        $("#btn-downloadfile").removeAttr('download');
        $('#FileNameHeading').text("File:");
        $('#Logging').val('');
    });
</script>